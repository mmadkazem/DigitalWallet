// <auto-generated />
using System;
using DigitalWallet.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalWallet.Common.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalWallet.Features.Account.Common.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserWalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserWalletId")
                        .IsUnique()
                        .HasFilter("[UserWalletId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigitalWallet.Features.Wallet.Common.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PayDateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WalletReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WalletSenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WalletReceiptId");

                    b.HasIndex("WalletSenderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DigitalWallet.Features.Wallet.Common.UserWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<double>("BlockBalance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserWallets");
                });

            modelBuilder.Entity("DigitalWallet.Features.Account.Common.User", b =>
                {
                    b.HasOne("DigitalWallet.Features.Wallet.Common.UserWallet", "UserWallet")
                        .WithOne("User")
                        .HasForeignKey("DigitalWallet.Features.Account.Common.User", "UserWalletId");

                    b.Navigation("UserWallet");
                });

            modelBuilder.Entity("DigitalWallet.Features.Wallet.Common.Transaction", b =>
                {
                    b.HasOne("DigitalWallet.Features.Wallet.Common.UserWallet", "WalletReceipt")
                        .WithMany()
                        .HasForeignKey("WalletReceiptId");

                    b.HasOne("DigitalWallet.Features.Wallet.Common.UserWallet", "WalletSender")
                        .WithMany()
                        .HasForeignKey("WalletSenderId");

                    b.Navigation("WalletReceipt");

                    b.Navigation("WalletSender");
                });

            modelBuilder.Entity("DigitalWallet.Features.Wallet.Common.UserWallet", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
